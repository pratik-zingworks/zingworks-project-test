{"version":3,"sources":["components/GlobalButton/GlobalButton.component.jsx","components/Input/Input.component.jsx","components/SignUp/SignUp.component.jsx","components/SignIn/SignIn.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["GlobalButton","Title","Type","className","Button","variant","type","sx","backgroundColor","width","fullWidth","toUpperCase","Input","Label","Avalue","OnChange","EERR","icon","color","TextField","label","error","helperText","message","value","InputProps","endAdornment","onChange","borderColor","onKeyPress","e","charCode","preventDefault","SignUp","useForm","handleSubmit","control","style","action","onSubmit","data","console","log","name","defaultValue","rules","required","render","field","fieldState","pattern","to","inputProps","SignIn","Checkbox","marginLeft","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0288c3ad.chunk.js","sourcesContent":["import './GlobalButton.style.css';\nimport Button from '@mui/material/Button';\n\nconst GlobalButton = ({Title, Type}) => {\n    return ( \n        <div className=\"Global-button\">\n            <Button variant=\"contained\" type={Type} sx={{\n                backgroundColor: \"#6C63FF\",\n                \"&:hover\" : {\n                    backgroundColor: \"#37328a\",\n                },\n                '@media(maxWidth: 480px)' : {\n                    width: '80% !important'\n                  }\n            }} fullWidth>{Title.toUpperCase()}</Button>\n        </div>\n     );\n}\n \nexport default GlobalButton;","import TextField from '@mui/material/TextField';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LockIcon from '@mui/icons-material/Lock';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\nimport './Input.style.css';\n\nconst Input = ({Label, Type, Avalue, OnChange, EERR}) => {\n    var icon = null;\n\n\n    if(Type === \"text\"){\n        icon = <PersonIcon sx={{\n            color: \"#6C63FF\",\n        }} />\n        if(Label === \"First Name\" || Label === \"Last Name\"){\n            icon = null\n        }\n    }else if(Type === \"password\"){\n        icon = <LockIcon sx={{\n            color: \"#6C63FF\",\n        }} />\n        if(Label === \"Confirm password\"){\n            icon = <PasswordIcon sx={{\n                color: \"#6C63FF\",\n            }} />}\n    }\n    else if(Type === \"email\"){\n        icon = <AlternateEmailIcon sx={{\n            color: \"#6C63FF\",\n        }} />\n    }\n    \n    else{\n        icon = null\n    }\n    return ( \n        <div className=\"SignIn-inputs\">\n\n            <TextField \n            label= {Label} \n            variant=\"outlined\"\n            error = {!!EERR}\n            helperText = {EERR ? EERR.message : null} \n            type = {Type}\n            value = {Avalue}\n            // onChange = {Rchange}\n            InputProps={{\n                endAdornment: (\n                    icon\n                    ),\n               }}\n               onChange = {OnChange}\n               sx={{\n                '& .MuiOutlinedInput-root': {\n                    '& fieldset': {\n                      borderColor: '#6C63FF',\n                    }}\n            }} \n            onKeyPress = {(e) => {\n                if(e.charCode === 32){\n                    e.preventDefault();\n                }\n            }}\n            fullWidth />\nn        </div>\n     );\n}\n \nexport default Input;","// import { useState } from 'react';\nimport {useForm, Controller} from 'react-hook-form'\nimport {Link} from 'react-router-dom'\nimport GlobalButton from '../GlobalButton/GlobalButton.component';\nimport Input from '../Input/Input.component';\nimport './SignUp.style.css';\n\nconst SignUp = () => {\n    const {handleSubmit, control} = useForm();\n\n   \n    return ( \n        <div className=\"SignUp-container\" >\n            <div className=\"SignUp-head\">\n                <h3 style={{\n                    color: \"#37328a\",\n                }}>SIGN UP</h3>   \n            </div>\n            <div className=\"SignUp-body\">\n                <form action=\"#\" onSubmit={handleSubmit(data => console.log(data))} >\n                    <div className=\"SignUp-alignment\">\n                        <div className=\"SignUp-flex-div-one\">                        \n                            <Controller\n                            control={control}\n                            name=\"firstName\"\n                            defaultValue = \"\"\n                            rules={{ required: 'First name required', \n                          }}\n                            render={({field : { value, onChange }, fieldState: { error }  }) => (\n                                <Input Type = \"text\" Label = \"First Name\"\n                                Avalue = {value} EERR = {error} OnChange = {onChange} />\n                            )}\n                            \n                            />\n                        </div>\n                        <div className=\"SignUp-flex-div-two\">\n                            <Controller\n                            control={control}\n                            name=\"lastName\"\n                            defaultValue = \"\"\n                            rules={{ required: 'Last name required', }}\n                            render={({field : { value, onChange }, fieldState: { error }  }) => (\n                                <Input Type = \"text\" Label = \"Last Name\"\n                                Avalue = {value} EERR = {error} OnChange = {onChange} />\n\n                            )}\n                            />\n                        </div>\n                    </div>\n\n                            <Controller\n                            control={control}\n                            name=\"email\"\n                            defaultValue = \"\"\n                            rules={{ required: 'e-mail required', pattern: {\n                                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                message: 'Please enter a valid email',\n                            }, }}\n                            render={({field : { value, onChange }, fieldState: { error }  }) => (\n                                <Input Type = \"email\" Label = \"e-mail\"\n                                Avalue = {value} EERR = {error} OnChange = {onChange} />\n\n                            )}\n\n                            />\n                            <Controller\n                            control={control}\n                            name=\"password\"\n                            defaultValue = \"\"\n                            rules={{ required: 'Password Reuired' }}\n                            render={({field : { value, onChange }, fieldState: { error }  }) => (\n                                <Input Type = \"password\" Label = \"Password\"\n                                Avalue = {value} EERR = {error} OnChange = {onChange} />\n\n                            )}\n                            />\n                            <Controller\n                            control={control}\n                            name=\"confirmPassword\"\n                            defaultValue = \"\"\n                            rules={{ required: 'Confirm password' }}\n                            render={({field : { value, onChange }, fieldState: { error }  }) => (\n                                <Input Type = \"password\" Label = \"Confirm password\"\n                                Avalue = {value} EERR = {error} OnChange = {onChange} />\n\n                            )}\n                            />\n                    \n                    {/* <Input Type = \"password\" Label = \"Password\" HandleChange = {(e) => {setPassword(e)}} /> */}\n                    \n                    <div className=\"bottomHandler\">\n                        <p>Do you have an account? <Link to=\"/\" >Sign In</Link></p>\n                        <GlobalButton Title = \"sign up\" Type = \"submit\"/>\n                    </div>\n                </form>\n            </div>\n        </div>\n     );\n}\n \nexport default SignUp;","// import { useState } from 'react';\nimport {useForm, Controller} from 'react-hook-form'\nimport GlobalButton from '../GlobalButton/GlobalButton.component';\nimport Checkbox from '@mui/material/Checkbox';\nimport Input from '../Input/Input.component';\nimport './SignIn.style.css';\nimport { Link } from 'react-router-dom';\n\nconst label = { inputProps: { 'aria-label': 'Remember me' } };\n\n\nconst SignIn = () => {\n    // const [userName, setUserName] = useState('');\n    // const [password, setPassword] = useState('');\n    const {handleSubmit, control} = useForm();\n\n   \n    return ( \n        <div className=\"SignIn-container\" >\n            <div className=\"SignIn-head\">\n                <h3 style={{\n                    color: \"#37328a\",\n                }}>SIGN IN</h3>   \n            </div>\n            <div className=\"SignIn-body\">\n                <form action=\"#\" onSubmit={handleSubmit(data => console.log(data))} >\n                <Controller\n                    control={control}\n                    name=\"userName\"\n                    defaultValue = \"\"\n                    rules={{ required: 'First name required' }}\n                    render={({field : { value, onChange }, fieldState: { error }  }) => (\n                        <Input Type = \"text\" Label = \"Username\"\n                        Avalue = {value} EERR = {error} OnChange = {onChange} />\n\n                    )}\n                    />\n                    <Controller\n                    control={control}\n                    name=\"password\"\n                    defaultValue = \"\"\n                    rules={{ required: 'Password Reuired' }}\n                    render={({field : { value, onChange }, fieldState: { error }  }) => (\n                        <Input Type = \"password\" Label = \"password\"\n                        Avalue = {value} EERR = {error} OnChange = {onChange} />\n\n                    )}\n                    />\n                    \n                    {/* <Input Type = \"password\" Label = \"Password\" HandleChange = {(e) => {setPassword(e)}} /> */}\n                    <span className=\"bottomHandlerCheckbox\">\n                    <Checkbox {...label} sx={{\n                        color: \"#37328a\",\n                        marginLeft: \"-11px\",\n                        '&.Mui-checked': {\n                            color: \"#37328a\",\n                          },\n                    }} />\n                    <label>Remember me.</label>\n\n                    </span>\n                    <div className=\"bottomHandler\">\n                        <p>Don't have an account? <Link to=\"/signup\" >Sign Up</Link></p>\n                        <GlobalButton Title = \"sign in\" Type = \"submit\"/>\n                    </div>\n                </form>\n            </div>\n        </div>\n     );\n}\n \nexport default SignIn;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport SignUp from './components/SignUp/SignUp.component';\nimport SignIn from \"./components/SignIn/SignIn.component\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/\">\n            <SignIn />\n          </Route>\n        </Switch>\n    </Router>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}